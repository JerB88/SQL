# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1 Show me songs and the artist with high popularity greater than 8.

SELECT artist_name, SUM(CASE WHEN popularity > 8 THEN 1 ELSE 0 END) AS Most_Popular
FROM spotifydata
GROUP BY artist_name;

#2 Show me the most popular artist of 2021.

SELECT artist_name, popularity
FROM spotifydata
ORDER BY popularity DESC
LIMIT 1;

#3 Which artist had the longest song with the highest energy?

SELECT artist_name, MAX(energy), MAX(duration_ms)
FROM spotifydata;

#4 What is the average danceability by artist and track?

SELECT artist_name, track_name, AVG(danceability)
FROM Spotifydata;
GROUP BY artist_name, track_name;

#5 Who are the top 10 artists based on popularity?

SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

#6 What artist released the longest song?

SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata;

#7 What is the average danceability for the 10 most popular songs?

SELECT artist_name, track_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 10;
